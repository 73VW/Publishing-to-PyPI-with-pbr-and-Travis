# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, 73VW
# This file is distributed under the same license as the Automate your
# publishing to PyPI with PBR and Travis package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Automate your publishing to PyPI with PBR and Travis"
" \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-12 16:10+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../docs/main.rst:2
msgid "`‚öôÔ∏èAutomate your publishing to PyPI with PBR and Travis`"
msgstr ""

#: ../../docs/main.rst:5
msgid "`‚úîÔ∏èStep 1: write the setup for your python project`"
msgstr ""

#: ../../docs/main.rst:7
msgid ""
"If you want to publish your project to PyPi, you first have to make a "
"setup file."
msgstr ""

#: ../../docs/main.rst:9
msgid ""
"In this tutorial, I will cover the use of PBR_ which simplifies the "
"process."
msgstr ""

#: ../../docs/main.rst:12
msgid "`Setup.py`"
msgstr ""

#: ../../docs/main.rst:14
msgid ""
"As you can see in the `python setup`_ file included in this repository, "
"the syntax is quite basic."
msgstr ""

#: ../../docs/main.rst:28
msgid "üéâ You simplify define that you want to use PBR_ and that's it! üéâ"
msgstr ""

#: ../../docs/main.rst:31
msgid "`Setup.cfg`"
msgstr ""

#: ../../docs/main.rst:33
msgid ""
"As you can see in the `config setup`_ file included in this repository, "
"the syntax not more complicated than the last file."
msgstr ""

#: ../../docs/main.rst:35
msgid "Let's go through every section together."
msgstr ""

#: ../../docs/main.rst:37
msgid "First of all, the metadata section:"
msgstr ""

#: ../../docs/main.rst:90
msgid "üéâ After a few tweaking you are now ready to go! üéâ"
msgstr ""

#: ../../docs/main.rst:93
msgid "`‚úîÔ∏èStep 2: Enable Travis!`"
msgstr ""

#: ../../docs/main.rst:95
msgid ""
"Two ways of enabling Travis are presented here. One using `Travis CLI`_ "
"and one without."
msgstr ""

#: ../../docs/main.rst:98
msgid "`Using travis CLI`"
msgstr ""

#: ../../docs/main.rst:100
msgid "Run :code:`travis login` and login to travis."
msgstr ""

#: ../../docs/main.rst:102
msgid "Now you can run :code:`travis init`."
msgstr ""

#: ../../docs/main.rst:104
msgid ""
"If you are in a git repository, Travis will detect it and ask if this is "
"correct."
msgstr ""

#: ../../docs/main.rst:106
msgid "Otherwise, it will tell you it can detect the repo."
msgstr ""

#: ../../docs/main.rst:108
msgid ""
"Once you hit :code:`Enter`, Travis asks the main language. In this case, "
"type :code:`Python`."
msgstr ""

#: ../../docs/main.rst:110
msgid ""
"Now a new file called :code:`.travis.yml` has been created and is "
"available in your repo. Moreover, Travis is now enabled for this repo."
msgstr ""

#: ../../docs/main.rst:112
msgid "We will go through this file later."
msgstr ""

#: ../../docs/main.rst:115
msgid "`Manually`"
msgstr ""

#: ../../docs/main.rst:117
msgid "Go to `Travis home page`_."
msgstr ""

#: ../../docs/main.rst:118
msgid "Sign up or Sign in."
msgstr ""

#: ../../docs/main.rst:119
msgid "Go to your profile page and sync your account."
msgstr ""

#: ../../docs/main.rst:120
msgid "Your public Github repositories are now listed above."
msgstr ""

#: ../../docs/main.rst:121
msgid "Toggle the project you want."
msgstr ""

#: ../../docs/main.rst:124
msgid "`.travis.yml`"
msgstr ""

#: ../../docs/main.rst:126
msgid "Now let's write our setting file."
msgstr ""

#: ../../docs/main.rst:128
msgid ""
"As the doc is really well made, I suggest you go check it first as I "
"won't explain everything. You can find it here https://docs.travis-"
"ci.com/user/getting-started/."
msgstr ""

#: ../../docs/main.rst:130
msgid "However, I will explain the settings I usually use."
msgstr ""

#: ../../docs/main.rst:181
msgid "`Password`"
msgstr ""

#: ../../docs/main.rst:183
msgid ""
"If you don't have `Travis CLI`_ installed, use the second option I "
"mentioned above and do the following:"
msgstr ""

#: ../../docs/main.rst:185
msgid ""
"In your profile page, find your project and click on the little gear ‚öôÔ∏è. "
"This will bring you to the settings."
msgstr ""

#: ../../docs/main.rst:186
msgid "Go to the :code:`Environment Variables` section and add a new variable."
msgstr ""

#: ../../docs/main.rst:187
msgid ""
"If you take my example, its name will be PYPI_PASSWORD and the value your"
" password."
msgstr ""

#: ../../docs/main.rst:193
msgid "If you have `Travis CLI`_, this one is for you."
msgstr ""

#: ../../docs/main.rst:195
msgid "Leave blank the password section, like the following."
msgstr ""

#: ../../docs/main.rst:203
msgid ""
"Now let's encrypt it! Simply run :code:`travis encrypt --add "
"deploy.password` and Travis will ask for your password, encrypt it and "
"paste it to the file."
msgstr ""

#: ../../docs/main.rst:205
msgid "üéâ Now your are ready to go! üéâ"
msgstr ""

#: ../../docs/main.rst:208
msgid "`‚úîÔ∏èSo what now?!`"
msgstr ""

#: ../../docs/main.rst:210
msgid ""
"Well, let's try to push everyhing to the repository to check if "
"everything is alright and if the tests pass!"
msgstr ""

#: ../../docs/main.rst:212
msgid "Go to `Travis home page`_ and check if everything went well!"
msgstr ""

#: ../../docs/main.rst:214
msgid ""
"As you remember, we haven't set up any tag in github so this commit "
"shouldn't get deployed."
msgstr ""

#: ../../docs/main.rst:216
msgid "Travis will also tell it:"
msgstr ""

#: ../../docs/main.rst:218
msgid ""
":code:`Skipping a deployment with the pypi provider because this is not a"
" tagged commit`"
msgstr ""

#: ../../docs/main.rst:221
msgid "`‚úîÔ∏èLet's tag it!`"
msgstr ""

#: ../../docs/main.rst:223
msgid ""
"Now, create a tag. This is easy with git. Git tag doc can be found `here "
"<https://git-scm.com/book/en/v2/Git-Basics-Tagging>`_."
msgstr ""

#: ../../docs/main.rst:225
msgid ""
"Note that with :code:`git tag` the option :code:`-a` allows you to "
"specify the version and :code:`-m` the message."
msgstr ""

#: ../../docs/main.rst:227
msgid "So your command will be the following:"
msgstr ""

#: ../../docs/main.rst:229
msgid ":code:`git tag -a 0.0.1 -m \"First pypi deployment\"`"
msgstr ""

#: ../../docs/main.rst:231
msgid ""
"Now you can check if it was created by running :code:`git tag`. The "
"result should look like the following."
msgstr ""

#: ../../docs/main.rst:239
msgid ""
"And now push and check again Travis and pypi and your package should be "
"deployed!"
msgstr ""

#: ../../docs/main.rst:241
msgid ""
"PSA: Don't forget to add :code:`--tags` to your push command otherwise "
"they will stay in your local repo."
msgstr ""

#: ../../docs/main.rst:243
msgid "**‚úîÔ∏èDeployed!**"
msgstr ""

#: ../../docs/main.rst:246
msgid "`‚ö†Ô∏èGlobal notes`"
msgstr ""

#: ../../docs/main.rst:248
msgid ""
"‚úîÔ∏è Your project must be public in order to use Travis. Otherwise you have"
" to upgrade to Travis pro."
msgstr ""

#: ../../docs/main.rst:250
msgid ""
"‚úîÔ∏è Your email address must be verified on pypi in order to upload a new "
"project. Otherwise upload will be rejected."
msgstr ""

#: ../../docs/main.rst:252
msgid ""
"‚úîÔ∏èYour tag version **MUST** be in the form [DIGIT.DIGIT.DIGIT]. Check "
"https://docs.openstack.org/pbr/3.1.0/semver.html for more infos."
msgstr ""

